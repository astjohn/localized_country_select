h1. LocalizedCountrySelect

Rails plugin to provide support for localized <tt><select></tt> menu with country names and for
storing country information as country _code_ (eg. 'es'), not _name_ (eg. 'Spain'), in the database.

Uses the Rails internationalization framework ("I18n":http://rails-i18n.org) for translating the names of countries.
Requires Rails 2.2 (released November 21st, 2008) or later versions.
Country names are loaded from hashes in plugin directory, according to <tt>I18n.locale</tt> value.

You can easily translate country codes in your application like this:

<pre>
  <%= I18n.t @user.country, :scope => 'countries' %>  
</pre>


Comes with a Rake task <tt>rake import:country_select:lang</tt> (You need to replace lang variable with lang you need.) for importing country names
from Unicode.org's CLDR repository (http://www.unicode.org/cldr/data/charts/summary/root.html)
Don't forget to restart the application when you add new locale.

ActionView helper code is adapted from Rails' default *country_select* plugin (previously in core).
See http://github.com/rails/country_select/tree/master/lib/country_select.rb

h2. Install & Usage

<pre>$ rails plugin install https://github.com/kristianmandrup/localized_language_select.git</pre>  

It should be converted into a gem...

h2. Example

<pre>
  <%= localized_country_select(:user, :country, [], :include_blank => 'Please choose...') %>  
</pre>

will become:

<pre>
  <select name="user[country]" id="user_country">
  <option value="">Please choose...</option>
  <option disabled="disabled" value="">-------------</option>
  <option value="AF">Afghanistan</option>
  ...
  <option value="ZW">Zimbabwe</option>
  </select>  
</pre>    

for the <tt>en</tt> locale.

h2. Options

@:exclude@ option

<pre>
  <%= localized_country_select(:user, :country, ['English'], :include_blank => 'Please choose...', :exclude => ['Afrikaans']) %>  
</pre>

@:only@ option

<pre>
  <%= localized_country_select(:user, :country, ['English'], :include_blank => 'Please choose...', :only => ['German', 'French']) %>  
</pre>

h2. Framework usage

This plugin should also integrate nicely with various formbuilders, including Formtastic

h2. Copyright


h2. Other resources

* http://github.com/rails/country_select (Default Rails plugin)
* http://github.com/russ/country_code_select (Stores country code, not name)


Copyright (c) 2008 Karel Minarik (www.karmi.cz), released under the MIT license
